(function() {var implementors = {};
implementors["rascaline"] = [{"text":"impl From&lt;[f64; 3]&gt; for Vector3D","synthetic":false,"types":[]},{"text":"impl From&lt;[[f64; 3]; 3]&gt; for Matrix3","synthetic":false,"types":[]},{"text":"impl From&lt;Error&gt; for Error","synthetic":false,"types":[]},{"text":"impl From&lt;Utf8Error&gt; for Error","synthetic":false,"types":[]},{"text":"impl From&lt;Box&lt;dyn Any + 'static + Send, Global&gt;&gt; for Error","synthetic":false,"types":[]},{"text":"impl From&lt;Matrix3&gt; for UnitCell","synthetic":false,"types":[]},{"text":"impl From&lt;&amp;'_ (dyn System + '_)&gt; for SimpleSystem","synthetic":false,"types":[]},{"text":"impl From&lt;f64&gt; for IndexValue","synthetic":false,"types":[]},{"text":"impl From&lt;usize&gt; for IndexValue","synthetic":false,"types":[]},{"text":"impl From&lt;isize&gt; for IndexValue","synthetic":false,"types":[]},{"text":"impl From&lt;Box&lt;dyn CalculatorBase + 'static, Global&gt;&gt; for Calculator","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()