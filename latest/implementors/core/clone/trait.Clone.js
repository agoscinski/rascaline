(function() {var implementors = {};
implementors["rascaline"] = [{"text":"impl Clone for Vector3D","synthetic":false,"types":[]},{"text":"impl Clone for Matrix3","synthetic":false,"types":[]},{"text":"impl Clone for UnitCell","synthetic":false,"types":[]},{"text":"impl Clone for Pair","synthetic":false,"types":[]},{"text":"impl Clone for IndexValue","synthetic":false,"types":[]},{"text":"impl Clone for Indexes","synthetic":false,"types":[]},{"text":"impl Clone for SortedDistances","synthetic":false,"types":[]},{"text":"impl Clone for HyperGeometricSphericalExpansion","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for HyperGeometricParameters&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for GTOParameters","synthetic":false,"types":[]},{"text":"impl Clone for GTO","synthetic":false,"types":[]},{"text":"impl Clone for SphericalHarmonicsArray","synthetic":false,"types":[]},{"text":"impl Clone for SphericalHarmonics","synthetic":false,"types":[]},{"text":"impl Clone for RadialBasis","synthetic":false,"types":[]},{"text":"impl Clone for CutoffFunction","synthetic":false,"types":[]},{"text":"impl Clone for SphericalExpansionParameters","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()