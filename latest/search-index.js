var searchIndex = JSON.parse('{\
"rascaline":{"doc":"","i":[[0,"types","rascaline","This module provides 3D vectors and matrix to be used in …",null,null],[3,"Vector3D","rascaline::types","A 3-dimensional vector type",null,null],[3,"Matrix3","","A 3x3 square matrix type.",null,null],[0,"system","rascaline","",null,null],[3,"UnitCell","rascaline::system","An <code>UnitCell</code> defines the system physical boundaries.",null,null],[3,"SimpleSystem","","A simple implementation of <code>System</code> to use when no other is …",null,null],[3,"Pair","","Pair of atoms coming from a neighbor list.",null,null],[12,"first","","index of the first atom in the pair",0,null],[12,"second","","index of the second atom in the pair",0,null],[12,"vector","","vector from the first atom to the second atom, wrapped …",0,null],[8,"System","","A <code>System</code> deals with the storage of atoms and related …",null,null],[10,"cell","","Get the unit cell for this system",1,[[],["unitcell",3]]],[10,"size","","Get the number of atoms in this system",1,[[]]],[10,"species","","Get the atomic species for all atoms in this system. The …",1,[[]]],[10,"positions","","Get the positions for all atoms in this system. The …",1,[[]]],[10,"compute_neighbors","","Compute the neighbor list according to the given cutoff, …",1,[[]]],[10,"pairs","","Get the list of pairs in this system. This list of pair …",1,[[]]],[10,"pairs_containing","","Get the list of pairs in this system which include the …",1,[[]]],[0,"descriptor","rascaline","",null,null],[3,"Indexes","rascaline::descriptor","",null,null],[3,"IndexesBuilder","","",null,null],[3,"IndexValue","","",null,null],[8,"EnvironmentIndexes","","",null,null],[10,"names","","",2,[[],["vec",3]]],[10,"indexes","","",2,[[],["indexes",3]]],[11,"with_gradients","","",2,[[]]],[11,"gradients_for","","",2,[[["indexes",3]],[["indexes",3],["option",4]]]],[3,"StructureEnvironment","","<code>StructureEnvironment</code> is used to represents environments …",null,null],[3,"AtomEnvironment","","<code>AtomEnvironment</code> is used to represents atom-centered …",null,null],[3,"StructureSpeciesEnvironment","","<code>StructureSpeciesEnvironment</code> is used to represents …",null,null],[3,"AtomSpeciesEnvironment","","<code>AtomSpeciesEnvironment</code> is used to represents …",null,null],[3,"ThreeBodiesSpeciesEnvironment","","<code>ThreeBodiesSpecies</code> is used to represents atom-centered …",null,null],[3,"Descriptor","","",null,null],[12,"values","","An array of environments.count() by features.count() …",3,null],[12,"environments","","",3,null],[12,"features","","",3,null],[12,"gradients","","Gradients of the descriptor with respect to one atomic …",3,null],[12,"gradients_indexes","","",3,null],[0,"calculators","rascaline","",null,null],[0,"soap","rascaline::calculators","",null,null],[3,"HyperGeometricSphericalExpansion","rascaline::calculators::soap","Computes the G function and its derivative for all …",null,null],[3,"HyperGeometricParameters","","",null,null],[12,"atomic_gaussian_constant","","",4,null],[12,"gto_gaussian_constants","","",4,null],[8,"RadialIntegral","","",null,null],[10,"compute","","Compute the radial integral for a single atomic <code>distance</code> …",5,[[["arrayviewmut2",6],["option",4]]]],[3,"GTO","","",null,null],[3,"GTOParameters","","Parameters controlling GTO radial basis",null,null],[12,"max_radial","","Number of radial components",6,null],[12,"max_angular","","Number of angular components",6,null],[12,"atomic_gaussian_width","","atomic density gaussian width",6,null],[12,"cutoff","","cutoff radius",6,null],[3,"SphericalHarmonics","","Compute a full set of spherical harmonics at given …",null,null],[3,"SphericalHarmonicsArray","","Array storing data for <code>0 <= l <= l_max</code>, <code>-l <= m <= l</code>. …",null,null],[3,"SphericalExpansion","","",null,null],[3,"SphericalExpansionParameters","","",null,null],[12,"cutoff","","Spherical cutoff to use for atomic environments",7,null],[12,"max_radial","","Number of radial basis function to use",7,null],[12,"max_angular","","Number of spherical harmonics to use",7,null],[12,"atomic_gaussian_width","","Width of the atom-centered gaussian creating the atomic …",7,null],[12,"gradients","","Should we also compute gradients of the feature?",7,null],[12,"radial_basis","","radial basis to use for the radial integral",7,null],[12,"cutoff_function","","cutoff function used to smooth the behavior around the …",7,null],[4,"RadialBasis","","",null,null],[13,"GTO","","",8,null],[4,"CutoffFunction","","Possible values for the smoothing cutoff function",null,null],[13,"Step","","Step function, 1 if <code>r < r_cut</code> and 0 if <code>r >= r_cut</code>",9,null],[13,"ShiftedCosine","","Shifted cosine switching function f(r) = 1/2 * (1 + …",9,null],[12,"width","rascaline::calculators::soap::CutoffFunction","",10,null],[8,"CalculatorBase","rascaline::calculators","TODO: docs",null,null],[10,"name","","Get the name of this Calculator",11,[[],["string",3]]],[10,"get_parameters","","Get the parameters used to create this Calculator as a …",11,[[],["string",3]]],[10,"features_names","","Get the names of features for this Calculator",11,[[],["vec",3]]],[10,"features","","Get the default set of features for this Calculator",11,[[],["indexes",3]]],[10,"environments","","Get the default set of environments for this Calculator",11,[[],[["environmentindexes",8],["box",3]]]],[10,"compute_gradients","","Does this environment compute gradients?",11,[[]]],[10,"check_features","","Check that the given indexes are valid feature indexes …",11,[[["indexes",3]]]],[10,"check_environments","","Check that the given indexes are valid environment …",11,[[["indexes",3]]]],[10,"compute","","Core implementation of the descriptor.",11,[[["descriptor",3]]]],[3,"SortedDistances","","",null,null],[3,"SphericalExpansion","","",null,null],[3,"SphericalExpansionParameters","","",null,null],[12,"cutoff","","Spherical cutoff to use for atomic environments",7,null],[12,"max_radial","","Number of radial basis function to use",7,null],[12,"max_angular","","Number of spherical harmonics to use",7,null],[12,"atomic_gaussian_width","","Width of the atom-centered gaussian creating the atomic …",7,null],[12,"gradients","","Should we also compute gradients of the feature?",7,null],[12,"radial_basis","","radial basis to use for the radial integral",7,null],[12,"cutoff_function","","cutoff function used to smooth the behavior around the …",7,null],[4,"Error","rascaline","",null,null],[13,"InvalidParameter","","Got an invalid parameter value in a function",12,null],[13,"JSON","","Error while serializing/deserializing data",12,null],[13,"Utf8","","Error due to C strings containing non-utf8 data",12,null],[13,"Panic","","Error used when a panic was caught",12,null],[3,"SimpleSystem","","A simple implementation of <code>System</code> to use when no other is …",null,null],[3,"Descriptor","","",null,null],[12,"values","","An array of environments.count() by features.count() …",3,null],[12,"environments","","",3,null],[12,"features","","",3,null],[12,"gradients","","Gradients of the descriptor with respect to one atomic …",3,null],[12,"gradients_indexes","","",3,null],[3,"Calculator","","",null,null],[3,"CalculationOptions","","Parameters specific to a single call to <code>compute</code>",null,null],[12,"use_native_system","","Copy the data from systems into native <code>SimpleSystem</code>. This …",13,null],[12,"selected_samples","","List of selected samples on which to run the computation",13,null],[12,"selected_features","","List of selected features on which to run the computation",13,null],[4,"SelectedIndexes","","List of pre-selected indexes on which the user wants to …",null,null],[13,"All","","Default, all indexes",14,null],[13,"Some","","Only the list of selected indexes",14,null],[11,"from","rascaline::types","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"inlined_clone","","",15,[[]]],[11,"to_subset","","",15,[[],["option",4]]],[11,"is_in_subset","","",15,[[]]],[11,"to_subset_unchecked","","",15,[[]]],[11,"from_subset","","",15,[[]]],[11,"vzip","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"inlined_clone","","",16,[[]]],[11,"to_subset","","",16,[[],["option",4]]],[11,"is_in_subset","","",16,[[]]],[11,"to_subset_unchecked","","",16,[[]]],[11,"from_subset","","",16,[[]]],[11,"vzip","","",16,[[]]],[11,"from","rascaline","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"to_subset","","",12,[[],["option",4]]],[11,"is_in_subset","","",12,[[]]],[11,"to_subset_unchecked","","",12,[[]]],[11,"from_subset","","",12,[[]]],[11,"vzip","","",12,[[]]],[11,"from","rascaline::system","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"inlined_clone","","",17,[[]]],[11,"to_subset","","",17,[[],["option",4]]],[11,"is_in_subset","","",17,[[]]],[11,"to_subset_unchecked","","",17,[[]]],[11,"from_subset","","",17,[[]]],[11,"vzip","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"to_subset","","",18,[[],["option",4]]],[11,"is_in_subset","","",18,[[]]],[11,"to_subset_unchecked","","",18,[[]]],[11,"from_subset","","",18,[[]]],[11,"vzip","","",18,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_subset","","",0,[[],["option",4]]],[11,"is_in_subset","","",0,[[]]],[11,"to_subset_unchecked","","",0,[[]]],[11,"from_subset","","",0,[[]]],[11,"vzip","","",0,[[]]],[11,"from","rascaline::descriptor","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"to_string","","",19,[[],["string",3]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"equivalent","","",19,[[]]],[11,"inlined_clone","","",19,[[]]],[11,"to_subset","","",19,[[],["option",4]]],[11,"is_in_subset","","",19,[[]]],[11,"to_subset_unchecked","","",19,[[]]],[11,"from_subset","","",19,[[]]],[11,"vzip","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"to_subset","","",20,[[],["option",4]]],[11,"is_in_subset","","",20,[[]]],[11,"to_subset_unchecked","","",20,[[]]],[11,"from_subset","","",20,[[]]],[11,"vzip","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"to_subset","","",21,[[],["option",4]]],[11,"is_in_subset","","",21,[[]]],[11,"to_subset_unchecked","","",21,[[]]],[11,"from_subset","","",21,[[]]],[11,"vzip","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"to_subset","","",22,[[],["option",4]]],[11,"is_in_subset","","",22,[[]]],[11,"to_subset_unchecked","","",22,[[]]],[11,"from_subset","","",22,[[]]],[11,"vzip","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"to_subset","","",23,[[],["option",4]]],[11,"is_in_subset","","",23,[[]]],[11,"to_subset_unchecked","","",23,[[]]],[11,"from_subset","","",23,[[]]],[11,"vzip","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"to_subset","","",24,[[],["option",4]]],[11,"is_in_subset","","",24,[[]]],[11,"to_subset_unchecked","","",24,[[]]],[11,"from_subset","","",24,[[]]],[11,"vzip","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"to_subset","","",25,[[],["option",4]]],[11,"is_in_subset","","",25,[[]]],[11,"to_subset_unchecked","","",25,[[]]],[11,"from_subset","","",25,[[]]],[11,"vzip","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"to_subset","","",26,[[],["option",4]]],[11,"is_in_subset","","",26,[[]]],[11,"to_subset_unchecked","","",26,[[]]],[11,"from_subset","","",26,[[]]],[11,"vzip","","",26,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"to_subset","","",3,[[],["option",4]]],[11,"is_in_subset","","",3,[[]]],[11,"to_subset_unchecked","","",3,[[]]],[11,"from_subset","","",3,[[]]],[11,"vzip","","",3,[[]]],[11,"from","rascaline","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"to_subset","","",27,[[],["option",4]]],[11,"is_in_subset","","",27,[[]]],[11,"to_subset_unchecked","","",27,[[]]],[11,"from_subset","","",27,[[]]],[11,"vzip","","",27,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"to_subset","","",14,[[],["option",4]]],[11,"is_in_subset","","",14,[[]]],[11,"to_subset_unchecked","","",14,[[]]],[11,"from_subset","","",14,[[]]],[11,"vzip","","",14,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"to_subset","","",13,[[],["option",4]]],[11,"is_in_subset","","",13,[[]]],[11,"to_subset_unchecked","","",13,[[]]],[11,"from_subset","","",13,[[]]],[11,"vzip","","",13,[[]]],[11,"from","rascaline::calculators","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"to_subset","","",28,[[],["option",4]]],[11,"is_in_subset","","",28,[[]]],[11,"to_subset_unchecked","","",28,[[]]],[11,"from_subset","","",28,[[]]],[11,"vzip","","",28,[[]]],[11,"from","rascaline::calculators::soap","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"to_subset","","",29,[[],["option",4]]],[11,"is_in_subset","","",29,[[]]],[11,"to_subset_unchecked","","",29,[[]]],[11,"from_subset","","",29,[[]]],[11,"vzip","","",29,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"to_subset","","",4,[[],["option",4]]],[11,"is_in_subset","","",4,[[]]],[11,"to_subset_unchecked","","",4,[[]]],[11,"from_subset","","",4,[[]]],[11,"vzip","","",4,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"to_subset","","",6,[[],["option",4]]],[11,"is_in_subset","","",6,[[]]],[11,"to_subset_unchecked","","",6,[[]]],[11,"from_subset","","",6,[[]]],[11,"vzip","","",6,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"to_subset","","",30,[[],["option",4]]],[11,"is_in_subset","","",30,[[]]],[11,"to_subset_unchecked","","",30,[[]]],[11,"from_subset","","",30,[[]]],[11,"vzip","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"to_subset","","",31,[[],["option",4]]],[11,"is_in_subset","","",31,[[]]],[11,"to_subset_unchecked","","",31,[[]]],[11,"from_subset","","",31,[[]]],[11,"vzip","","",31,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"to_subset","","",32,[[],["option",4]]],[11,"is_in_subset","","",32,[[]]],[11,"to_subset_unchecked","","",32,[[]]],[11,"from_subset","","",32,[[]]],[11,"vzip","","",32,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"to_subset","","",8,[[],["option",4]]],[11,"is_in_subset","","",8,[[]]],[11,"to_subset_unchecked","","",8,[[]]],[11,"from_subset","","",8,[[]]],[11,"vzip","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"to_subset","","",9,[[],["option",4]]],[11,"is_in_subset","","",9,[[]]],[11,"to_subset_unchecked","","",9,[[]]],[11,"from_subset","","",9,[[]]],[11,"vzip","","",9,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"to_subset","","",7,[[],["option",4]]],[11,"is_in_subset","","",7,[[]]],[11,"to_subset_unchecked","","",7,[[]]],[11,"from_subset","","",7,[[]]],[11,"vzip","","",7,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"to_subset","","",33,[[],["option",4]]],[11,"is_in_subset","","",33,[[]]],[11,"to_subset_unchecked","","",33,[[]]],[11,"from_subset","","",33,[[]]],[11,"vzip","","",33,[[]]],[11,"size","rascaline::system","",18,[[]]],[11,"positions","","",18,[[]]],[11,"species","","",18,[[]]],[11,"cell","","",18,[[],["unitcell",3]]],[11,"compute_neighbors","","",18,[[]]],[11,"pairs","","",18,[[]]],[11,"pairs_containing","","",18,[[]]],[11,"names","rascaline::descriptor","",22,[[],["vec",3]]],[11,"indexes","","",22,[[],["indexes",3]]],[11,"gradients_for","","",22,[[["indexes",3]],[["indexes",3],["option",4]]]],[11,"names","","",23,[[],["vec",3]]],[11,"indexes","","",23,[[],["indexes",3]]],[11,"gradients_for","","",23,[[["indexes",3]],[["indexes",3],["option",4]]]],[11,"names","","",24,[[],["vec",3]]],[11,"indexes","","",24,[[],["indexes",3]]],[11,"gradients_for","","",24,[[["indexes",3]],[["indexes",3],["option",4]]]],[11,"names","","",25,[[],["vec",3]]],[11,"indexes","","",25,[[],["indexes",3]]],[11,"gradients_for","","",25,[[["indexes",3]],[["indexes",3],["option",4]]]],[11,"names","","",26,[[],["vec",3]]],[11,"indexes","","",26,[[],["indexes",3]]],[11,"gradients_for","","",26,[[["indexes",3]],[["indexes",3],["option",4]]]],[11,"name","rascaline::calculators","",28,[[],["string",3]]],[11,"get_parameters","","",28,[[],["string",3]]],[11,"features_names","","",28,[[],["vec",3]]],[11,"features","","",28,[[],["indexes",3]]],[11,"environments","","",28,[[],[["environmentindexes",8],["box",3]]]],[11,"compute_gradients","","",28,[[]]],[11,"check_features","","",28,[[["indexes",3]]]],[11,"check_environments","","",28,[[["indexes",3]]]],[11,"compute","","",28,[[["descriptor",3]]]],[11,"name","rascaline::calculators::soap","",33,[[],["string",3]]],[11,"get_parameters","","",33,[[],["string",3]]],[11,"features_names","","",33,[[],["vec",3]]],[11,"features","","",33,[[],["indexes",3]]],[11,"environments","","",33,[[],[["environmentindexes",8],["box",3]]]],[11,"compute_gradients","","",33,[[]]],[11,"check_features","","",33,[[["indexes",3]]]],[11,"check_environments","","",33,[[["indexes",3]]]],[11,"compute","","",33,[[["descriptor",3]]]],[11,"compute","","",30,[[["arrayviewmut2",6],["option",4]]]],[11,"from","rascaline::types","",15,[[]]],[11,"from","","",16,[[],["matrix3",3]]],[11,"from","rascaline","",12,[[["error",3]],["error",4]]],[11,"from","","",12,[[["utf8error",3]],["error",4]]],[11,"from","","",12,[[["any",8],["box",3]],["error",4]]],[11,"from","rascaline::system","",17,[[["matrix3",3]],["unitcell",3]]],[11,"from","","",18,[[["system",8]],["simplesystem",3]]],[11,"from","rascaline::descriptor","",19,[[],["indexvalue",3]]],[11,"from","","",19,[[],["indexvalue",3]]],[11,"from","","",19,[[],["indexvalue",3]]],[11,"from","rascaline","",27,[[["calculatorbase",8],["box",3]],["calculator",3]]],[11,"clone","rascaline::types","",15,[[],["vector3d",3]]],[11,"clone","","",16,[[],["matrix3",3]]],[11,"clone","rascaline::system","",17,[[],["unitcell",3]]],[11,"clone","","",0,[[],["pair",3]]],[11,"clone","rascaline::descriptor","",19,[[],["indexvalue",3]]],[11,"clone","","",21,[[],["indexes",3]]],[11,"clone","rascaline::calculators","",28,[[],["sorteddistances",3]]],[11,"clone","rascaline::calculators::soap","",29,[[],["hypergeometricsphericalexpansion",3]]],[11,"clone","","",4,[[],["hypergeometricparameters",3]]],[11,"clone","","",6,[[],["gtoparameters",3]]],[11,"clone","","",30,[[],["gto",3]]],[11,"clone","","",31,[[],["sphericalharmonicsarray",3]]],[11,"clone","","",32,[[],["sphericalharmonics",3]]],[11,"clone","","",8,[[],["radialbasis",4]]],[11,"clone","","",9,[[],["cutofffunction",4]]],[11,"clone","","",7,[[],["sphericalexpansionparameters",3]]],[11,"default","rascaline::types","",15,[[]]],[11,"default","rascaline::descriptor","",3,[[]]],[11,"default","rascaline","",13,[[],["calculationoptions",3]]],[11,"cmp","rascaline::descriptor","",19,[[],["ordering",4]]],[11,"eq","rascaline::types","",15,[[["vector3d",3]]]],[11,"ne","","",15,[[["vector3d",3]]]],[11,"eq","","",16,[[["matrix3",3]]]],[11,"ne","","",16,[[["matrix3",3]]]],[11,"eq","rascaline::system","",17,[[["unitcell",3]]]],[11,"ne","","",17,[[["unitcell",3]]]],[11,"eq","rascaline::descriptor","",19,[[["indexvalue",3]]]],[11,"ne","","",19,[[["indexvalue",3]]]],[11,"eq","","",21,[[["indexes",3]]]],[11,"ne","","",21,[[["indexes",3]]]],[11,"partial_cmp","rascaline::types","",15,[[["vector3d",3]],[["option",4],["ordering",4]]]],[11,"lt","","",15,[[["vector3d",3]]]],[11,"le","","",15,[[["vector3d",3]]]],[11,"gt","","",15,[[["vector3d",3]]]],[11,"ge","","",15,[[["vector3d",3]]]],[11,"partial_cmp","rascaline::descriptor","",19,[[],[["option",4],["ordering",4]]]],[11,"deref","rascaline::types","",15,[[]]],[11,"deref","","",16,[[]]],[11,"deref_mut","","",15,[[]]],[11,"deref_mut","","",16,[[]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","rascaline","",12,[[["formatter",3]],["result",6]]],[11,"fmt","rascaline::system","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","rascaline::descriptor","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","rascaline::calculators","",28,[[["formatter",3]],["result",6]]],[11,"fmt","rascaline::calculators::soap","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","rascaline","",12,[[["formatter",3]],["result",6]]],[11,"fmt","rascaline::descriptor","",19,[[["formatter",3]],["result",6]]],[11,"div","rascaline::types","",15,[[],["vector3d",3]]],[11,"div","","",16,[[],["matrix3",3]]],[11,"sub","","",15,[[["vector3d",3]],["vector3d",3]]],[11,"sub","","",15,[[["vector3d",3]],["vector3d",3]]],[11,"sub","","",15,[[["vector3d",3]],["vector3d",3]]],[11,"sub","","",16,[[["matrix3",3]],["matrix3",3]]],[11,"sub","","",16,[[["matrix3",3]],["matrix3",3]]],[11,"sub","","",16,[[["matrix3",3]],["matrix3",3]]],[11,"add","","",15,[[["vector3d",3]],["vector3d",3]]],[11,"add","","",15,[[["vector3d",3]],["vector3d",3]]],[11,"add","","",15,[[["vector3d",3]],["vector3d",3]]],[11,"add","","",16,[[["matrix3",3]],["matrix3",3]]],[11,"add","","",16,[[["matrix3",3]],["matrix3",3]]],[11,"add","","",16,[[["matrix3",3]],["matrix3",3]]],[11,"mul","","",15,[[["vector3d",3]]]],[11,"mul","","",15,[[["vector3d",3]]]],[11,"mul","","",15,[[["vector3d",3]]]],[11,"mul","","",15,[[],["vector3d",3]]],[11,"mul","","",16,[[["matrix3",3]],["matrix3",3]]],[11,"mul","","",16,[[["matrix3",3]],["matrix3",3]]],[11,"mul","","",16,[[["matrix3",3]],["matrix3",3]]],[11,"mul","","",16,[[["vector3d",3]],["vector3d",3]]],[11,"mul","","",16,[[["vector3d",3]],["vector3d",3]]],[11,"mul","","",16,[[["vector3d",3]],["vector3d",3]]],[11,"mul","","",16,[[],["matrix3",3]]],[11,"neg","","",15,[[],["vector3d",3]]],[11,"add_assign","","",15,[[["vector3d",3]]]],[11,"add_assign","","",15,[[["vector3d",3]]]],[11,"add_assign","","",15,[[["vector3d",3]]]],[11,"add_assign","","",16,[[["matrix3",3]]]],[11,"add_assign","","",16,[[["matrix3",3]]]],[11,"add_assign","","",16,[[["matrix3",3]]]],[11,"sub_assign","","",15,[[["vector3d",3]]]],[11,"sub_assign","","",15,[[["vector3d",3]]]],[11,"sub_assign","","",15,[[["vector3d",3]]]],[11,"sub_assign","","",16,[[["matrix3",3]]]],[11,"sub_assign","","",16,[[["matrix3",3]]]],[11,"sub_assign","","",16,[[["matrix3",3]]]],[11,"mul_assign","","",15,[[]]],[11,"mul_assign","","",15,[[]]],[11,"mul_assign","","",15,[[]]],[11,"mul_assign","","",16,[[["matrix3",3]]]],[11,"mul_assign","","",16,[[["matrix3",3]]]],[11,"mul_assign","","",16,[[["matrix3",3]]]],[11,"mul_assign","","",16,[[]]],[11,"mul_assign","","",16,[[]]],[11,"mul_assign","","",16,[[]]],[11,"div_assign","","",15,[[]]],[11,"div_assign","","",15,[[]]],[11,"div_assign","","",15,[[]]],[11,"div_assign","","",16,[[]]],[11,"div_assign","","",16,[[]]],[11,"div_assign","","",16,[[]]],[11,"bitxor","","",15,[[["vector3d",3]],["vector3d",3]]],[11,"bitxor","","",15,[[["vector3d",3]],["vector3d",3]]],[11,"bitxor","","",15,[[["vector3d",3]],["vector3d",3]]],[11,"index","rascaline::descriptor","",21,[[]]],[11,"index","rascaline::calculators::soap","",31,[[]]],[11,"index_mut","","",31,[[]]],[11,"hash","rascaline::descriptor","",19,[[]]],[11,"sum","rascaline::types","",16,[[]]],[11,"source","rascaline","",12,[[],[["error",8],["option",4]]]],[11,"zero","rascaline::types","",15,[[],["vector3d",3]]],[11,"is_zero","","",15,[[]]],[11,"zero","","",16,[[],["matrix3",3]]],[11,"is_zero","","",16,[[]]],[11,"one","","Create an identity matrix",16,[[],["matrix3",3]]],[11,"serialize","rascaline::calculators","",28,[[],["result",4]]],[11,"serialize","rascaline::calculators::soap","",8,[[],["result",4]]],[11,"serialize","","",9,[[],["result",4]]],[11,"serialize","","",7,[[],["result",4]]],[11,"deserialize","rascaline::calculators","",28,[[],["result",4]]],[11,"deserialize","rascaline::calculators::soap","",8,[[],["result",4]]],[11,"deserialize","","",9,[[],["result",4]]],[11,"deserialize","","",7,[[],["result",4]]],[11,"new","rascaline::types","Create a new <code>Vector3D</code> with components <code>x</code>, <code>y</code>, <code>z</code>",15,[[],["vector3d",3]]],[11,"zero","","Create a new <code>Vector3D</code> with components <code>0</code>, <code>0</code>, <code>0</code>",15,[[],["vector3d",3]]],[11,"norm2","","Return the squared euclidean norm of a <code>Vector3D</code>",15,[[]]],[11,"norm","","Return the euclidean norm of a <code>Vector3D</code>",15,[[]]],[11,"normalized","","Normalize a <code>Vector3D</code>.",15,[[],["vector3d",3]]],[11,"tensorial","","Tensorial product between vectors. The tensorial product …",15,[[["vector3d",3]],["matrix3",3]]],[11,"min","","Get the minimal value in this vector, using <code>std::f64::min</code> …",15,[[]]],[11,"max","","Get the maximal value in this vector, using <code>std::f64::max</code> …",15,[[]]],[11,"new","","Create a new <code>Matrix3</code> specifying all its components",16,[[],["matrix3",3]]],[11,"zero","","Create a new <code>Matrix3</code> with components set to <code>0</code>",16,[[],["matrix3",3]]],[11,"one","","Create a new <code>Vector3D</code> with components all components set …",16,[[],["matrix3",3]]],[11,"rotation","","Returns rotation matrix given a rotation angle and an …",16,[[["vector3d",3]],["matrix3",3]]],[11,"trace","","Compute the trace of the matrix",16,[[]]],[11,"inverse","","Computes the inverse of a matrix",16,[[],["matrix3",3]]],[11,"determinant","","Computes the determinant of a matrix",16,[[]]],[11,"transposed","","Transpose this matrix into a new matrix",16,[[],["matrix3",3]]],[11,"norm","","Compute the (Frobenius) norm of the matrix",16,[[]]],[11,"infinite","rascaline::system","Create an infinite unit cell",17,[[],["unitcell",3]]],[11,"ortho","","Create an orthorhombic unit cell, with side lengths …",17,[[],["unitcell",3]]],[11,"cubic","","Create a cubic unit cell, with side lengths …",17,[[],["unitcell",3]]],[11,"triclinic","","Create a triclinic unit cell, with side lengths <code>a, b, c</code> …",17,[[],["unitcell",3]]],[11,"shape","","Get the cell shape",17,[[],["cellshape",4]]],[11,"is_infinite","","Check if this unit cell is infinite, <em>i.e.</em> if it does not …",17,[[]]],[11,"a","","Get the first length of the cell (i.e. the norm of the …",17,[[]]],[11,"b","","Get the second length of the cell (i.e. the norm of the …",17,[[]]],[11,"c","","Get the third length of the cell (i.e. the norm of the …",17,[[]]],[11,"lengths","","Get the distances between faces of the unit cell",17,[[],["vector3d",3]]],[11,"alpha","","Get the first angle of the cell",17,[[]]],[11,"beta","","Get the second angle of the cell",17,[[]]],[11,"gamma","","Get the third angle of the cell",17,[[]]],[11,"volume","","Get the volume of the cell",17,[[]]],[11,"scale_mut","","Scale this unit cell in-place by multiplying the cell …",17,[[["matrix3",3]]]],[11,"scale","","Scale this unit cell by multiplying the cell matrix by <code>s</code>, …",17,[[["matrix3",3]],["unitcell",3]]],[11,"matrix","","Get the matricial representation of the unit cell",17,[[],["matrix3",3]]],[11,"wrap_vector","","Wrap a vector in the unit cell, obeying the periodic …",17,[[["vector3d",3]]]],[11,"vector_image","","Find the image of a vector in the unit cell, obeying the …",17,[[["vector3d",3]]]],[11,"fractional","","Get the fractional representation of the <code>vector</code> in this …",17,[[["vector3d",3]],["vector3d",3]]],[11,"cartesian","","Get the Cartesian representation of the <code>fractional</code> vector …",17,[[["vector3d",3]],["vector3d",3]]],[11,"distance2","","Periodic boundary conditions squared distance between the …",17,[[["vector3d",3]]]],[11,"distance","","Periodic boundary conditions distance between the point <code>u</code> …",17,[[["vector3d",3]]]],[11,"angle","","Get the angle formed by the points at <code>r1</code>, <code>r2</code> and <code>r3</code> using …",17,[[["vector3d",3]]]],[11,"angle_and_derivatives","","Get the angle formed by the points at <code>r1</code>, <code>r2</code> and <code>r3</code> using …",17,[[["vector3d",3]]]],[11,"dihedral","","Get the dihedral angle formed by the points at <code>r1</code>, <code>r2</code>, <code>r3</code>…",17,[[["vector3d",3]]]],[11,"dihedral_and_derivatives","","Get the dihedral angle defined by the points at <code>r1</code>, <code>r2</code>, <code>r3</code>…",17,[[["vector3d",3]]]],[11,"new","","Create a new empty system with the given unit cell",18,[[["unitcell",3]],["simplesystem",3]]],[11,"from_xyz","","Read a system from an XYZ formatted string.",18,[[["unitcell",3]],["simplesystem",3]]],[11,"add_atom","","Add an atom with the given species and position to this …",18,[[["vector3d",3]]]],[11,"f64","rascaline::descriptor","",19,[[]]],[11,"usize","","",19,[[]]],[11,"isize","","",19,[[]]],[11,"new","","Create a new empty <code>IndexesBuilder</code> with the given <code>names</code>",20,[[["vec",3]],["indexesbuilder",3]]],[11,"size","","Get the number of indexes in a single value",20,[[]]],[11,"add","","Add a single entry with the given <code>values</code> for this set of …",20,[[]]],[11,"finish","","",20,[[],["indexes",3]]],[11,"size","","Get the number of indexes in a single value",21,[[]]],[11,"names","","Names of the indexes",21,[[],["vec",3]]],[11,"c_names","","Names of the indexes as C-compatible (null terminated) …",21,[[]]],[11,"count","","How many entries of indexes do we have",21,[[]]],[11,"iter","","",21,[[],["iter",3]]],[11,"contains","","Check whether the given <code>value</code> is part of this set of …",21,[[]]],[11,"position","","Get the position of the given value on this set of …",21,[[],["option",4]]],[11,"with_gradients","","",2,[[]]],[11,"gradients_for","","",2,[[["indexes",3]],[["indexes",3],["option",4]]]],[11,"new","","Create a new <code>AtomEnvironment</code> with the given cutoff.",23,[[],["atomenvironment",3]]],[11,"new","","Create a new <code>AtomSpeciesEnvironment</code> with the given <code>cutoff</code>…",25,[[],["atomspeciesenvironment",3]]],[11,"with_self_contribution","","Create a new <code>AtomSpeciesEnvironment</code> with the given <code>cutoff</code>…",25,[[],["atomspeciesenvironment",3]]],[11,"new","","Create a new <code>ThreeBodiesSpeciesEnvironment</code> with the given …",26,[[],["threebodiesspeciesenvironment",3]]],[11,"with_self_contribution","","Create a new <code>ThreeBodiesSpeciesEnvironment</code> with the given …",26,[[],["threebodiesspeciesenvironment",3]]],[11,"new","","",3,[[],["descriptor",3]]],[11,"prepare","","",3,[[["indexes",3]]]],[11,"prepare_gradients","","",3,[[["indexes",3]]]],[11,"densify","","",3,[[["vec",3]]]],[11,"new","rascaline","",27,[[["string",3]],[["result",4],["error",4],["calculator",3]]]],[11,"name","","Get the name associated with this Calculator",27,[[],["string",3]]],[11,"parameters","","Get the parameters used to create this Calculator in a …",27,[[]]],[11,"compute","","Compute the descriptor for all the given <code>systems</code> and …",27,[[["calculationoptions",3],["descriptor",3]],[["result",4],["error",4]]]],[11,"new","rascaline::calculators::soap","",29,[[]]],[11,"compute","","",29,[[["option",4],["hypergeometricparameters",3],["arrayviewmut2",6]]]],[11,"new","","",30,[[["gtoparameters",3]],["gto",3]]],[11,"new","","Create a new <code>SphericalHarmonicsArray</code> with the given …",31,[[],["sphericalharmonicsarray",3]]],[11,"new","","Build a new <code>SphericalHarmonics</code> calculator with the given …",32,[[],["sphericalharmonics",3]]],[11,"compute","","Evaluate all spherical harmonics for the given <code>direction</code>, …",32,[[["vector3d",3],["sphericalharmonicsarray",3],["option",4]]]],[11,"compute","","Evaluate the cutoff function at the distance <code>r</code> for the …",9,[[]]],[11,"derivative","","Evaluate the derivative of the cutoff function at the …",9,[[]]],[11,"new","","",33,[[["sphericalexpansionparameters",3]],["sphericalexpansion",3]]]],"p":[[3,"Pair"],[8,"System"],[8,"EnvironmentIndexes"],[3,"Descriptor"],[3,"HyperGeometricParameters"],[8,"RadialIntegral"],[3,"GTOParameters"],[3,"SphericalExpansionParameters"],[4,"RadialBasis"],[4,"CutoffFunction"],[13,"ShiftedCosine"],[8,"CalculatorBase"],[4,"Error"],[3,"CalculationOptions"],[4,"SelectedIndexes"],[3,"Vector3D"],[3,"Matrix3"],[3,"UnitCell"],[3,"SimpleSystem"],[3,"IndexValue"],[3,"IndexesBuilder"],[3,"Indexes"],[3,"StructureEnvironment"],[3,"AtomEnvironment"],[3,"StructureSpeciesEnvironment"],[3,"AtomSpeciesEnvironment"],[3,"ThreeBodiesSpeciesEnvironment"],[3,"Calculator"],[3,"SortedDistances"],[3,"HyperGeometricSphericalExpansion"],[3,"GTO"],[3,"SphericalHarmonicsArray"],[3,"SphericalHarmonics"],[3,"SphericalExpansion"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);